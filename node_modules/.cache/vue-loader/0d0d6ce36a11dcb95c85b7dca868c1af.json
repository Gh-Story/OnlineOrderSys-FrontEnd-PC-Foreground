{"remainingRequest":"D:\\HBuilderProject\\pc_fd_f\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HBuilderProject\\pc_fd_f\\src\\views\\Home\\Food\\Food.vue?vue&type=template&id=d5e4110e&scoped=true&","dependencies":[{"path":"D:\\HBuilderProject\\pc_fd_f\\src\\views\\Home\\Food\\Food.vue","mtime":1594474627284},{"path":"D:\\HBuilderProject\\pc_fd_f\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\HBuilderProject\\pc_fd_f\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\HBuilderProject\\pc_fd_f\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\HBuilderProject\\pc_fd_f\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IGNsYXNzPSJmb29kIj4KICAgICAgICA8ZGl2IGNsYXNzPSJjYXJ0Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FydC1udW0iPnt7Zm9vZENob29zZUxpc3QuZm9vZE51bVN1bX19PC9kaXY+CiAgICAgICAgICAgIDxhIGhyZWY9IiMiPjxlbC1idXR0b24gdHlwZT0icHJpbWFyeSIgY2lyY2xlIEBjbGljaz0ic2hvd1Nob3BwaW5nQ2FydCIgaWNvbj0iZWwtaWNvbi1zaG9wcGluZy1jYXJ0LTIiPjwvZWwtYnV0dG9uPjwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZWwtZHJhd2VyCiAgICAgICAgICAgICAgICB0aXRsZT0iSGVsbG9+IgogICAgICAgICAgICAgICAgOnZpc2libGUuc3luYz0iY2FydERyYXdlciIKICAgICAgICAgICAgICAgIDpkaXJlY3Rpb249ImNhcnREaXJlY3Rpb24iCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNob3BwaW5nQ2FydCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJ0TmFtZSI+IOi0rSDniakg6L2mIDwvZGl2Pgo8IS0tICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxpbmstdG9wIj48L2Rpdj4tLT4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcnRTaG93IiA+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FydEl0ZW0iICB2LWZvcj0iZm9vZEl0ZW0gaW4gZm9vZENob29zZUxpc3QuZm9vZExpc3QiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtUGljIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImltZ3MiIDpzcmM9ImZvb2RJdGVtLmZvb2QuZm9vZFBpY3R1cmUiIEBjbGljaz0iZm9vZERldGFpbChmb29kSXRlbS5mb29kLmZvb2RJZCkiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW1JbmZvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW1OYW1lIj57e2Zvb2RJdGVtLmZvb2QuZm9vZE5hbWV9fTwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbVByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9ImZvb2RJdGVtLmRpc2NvdW50PT0xIj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB4Ij7vv6U8L3NwYW4+IHt7KGZvb2RJdGVtLmZvb2QuZm9vZFByaWNlKS50b0ZpeGVkKDIpfX08L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtZWxzZT48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB4Ij7vv6U8L3NwYW4+IHt7KGZvb2RJdGVtLmZvb2REaXNjb3VudFByaWNlKS50b0ZpeGVkKDIpfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTBweDtjb2xvcjogZ3JheSI+IO+/pTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiBncmF5O2ZvbnQtc2l6ZTogMTJweDt0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtwYWRkaW5nLXJpZ2h0OiA1cHgiPiB7eyhmb29kSXRlbS5mb29kLmZvb2RQcmljZSkudG9GaXhlZCgyKX19IDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGVsLXRhZyA6a2V5PSJmb29kSXRlbS5kaXNjb3VudCIgc2l6ZT0ibWluaSIgdHlwZT0iZGFuZ2VyIiBlZmZlY3Q9InBsYWluIiA+IHt7Zm9vZEl0ZW0uZGlzY291bnQqMTB9feaKmDwvZWwtdGFnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtTnVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1pZj0iZm9vZEl0ZW0uZm9vZE51bT09MCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWJ1dHRvbiBAY2xpY2s9ImFkZEZvb2ROdW0oZm9vZEl0ZW0uZm9vZE51bSwgZm9vZEl0ZW0sIGZvb2RDaG9vc2VMaXN0KSIgc2l6ZT0ibWluaSIgdHlwZT0icHJpbWFyeSIgaWNvbj0iZWwtaWNvbi1wbHVzIiBjaXJjbGU+PC9lbC1idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1lbHNlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbC1idXR0b24gQGNsaWNrPSJtaW51c0Zvb2ROdW0oZm9vZEl0ZW0uZm9vZE51bSwgZm9vZEl0ZW0sIGZvb2RDaG9vc2VMaXN0KSIgc2l6ZT0ibWluaSIgaWNvbj0iZWwtaWNvbi1taW51cyIgY2lyY2xlPjwvZWwtYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCA6bWluPSIxIiA6bWF4PSI5OSIgdi1tb2RlbC5udW1iZXI9ImZvb2RJdGVtLmZvb2ROdW0iIEBjaGFuZ2U9ImNoYW5nZUZvb2ROdW0oZm9vZEl0ZW0uZm9vZE51bSxmb29kSXRlbSwgZm9vZENob29zZUxpc3QpIiBzdHlsZT0id2lkdGg6MzBweDt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6IDE2cHg7Y29sb3I6ICMzMTMzMzQ7Zm9udC13ZWlnaHQ6IGJvbGRlcjtwYWRkaW5nLWxlZnQ6IDEwcHg7cGFkZGluZy1yaWdodDogMTBweCIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbC1idXR0b24gQGNsaWNrPSJhZGRGb29kTnVtKGZvb2RJdGVtLmZvb2ROdW0sIGZvb2RJdGVtLCBmb29kQ2hvb3NlTGlzdCkiIHNpemU9Im1pbmkiIHR5cGU9InByaW1hcnkiIGljb249ImVsLWljb24tcGx1cyIgY2lyY2xlPjwvZWwtYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KPCEtLSAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbUxpbmUiPjwvZGl2Pi0tPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJ0QnV0dG9uIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYjEiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vdGltZ3NhLmJhaWR1LmNvbS90aW1nP2ltYWdlJnF1YWxpdHk9ODAmc2l6ZT1iOTk5OV8xMDAwMCZzZWM9MTU5Mzg2NzIxNjgxOSZkaT02ODgwZjcwNjllYWU5NDU0Y2MxN2VlM2ZjOGRiY2Q5ZiZpbWd0eXBlPTAmc3JjPWh0dHAlM0ElMkYlMkZicGljLjU4OGt1LmNvbSUyRmVsZW1lbnRfb3JpZ2luX21pbl9waWMlMkYxNiUyRjA3JTJGMjUlMkYxMjU3OTU5OTE0OTUyMDEuanBnIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImhlaWdodDogOTAlO3dpZHRoOiA4MCU7cGFkZGluZy10b3A6IDUlO3BhZGRpbmctbGVmdDogMTYlO2JvcmRlci1yYWRpdXM6IDE4MHB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcnRudW0iPnt7Zm9vZENob29zZUxpc3QuZm9vZE51bVN1bX19PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2IyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iZm9udC13ZWlnaHQ6IGJvbGRlcjtmb250LXNpemU6IDIycHg7ZGlzcGxheTogaW5saW5lO2NvbG9yOiAjZWE0YjM1OyI+PHNwYW4gc3R5bGU9ImNvbG9yOiAjZWE0YjM1O2ZvbnQtc2l6ZTogMTZweCI+77+lPC9zcGFuPnt7KGZvb2RDaG9vc2VMaXN0LmZvb2REaXNjb3VudFByaWNlU3VtKS50b0ZpeGVkKDIpfX08L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iZm9udC13ZWlnaHQ6IGJvbGRlcjtmb250LXNpemU6IDE0cHg7ZGlzcGxheTogaW5saW5lO2NvbG9yOiBncmF5O3RleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoIj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMHB4O2NvbG9yOiBncmF5O3BhZGRpbmctbGVmdDogNXB4Ij7vv6U8L3NwYW4+e3soZm9vZENob29zZUxpc3QuZm9vZFByaWNlU3VtKS50b0ZpeGVkKDIpfX08L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iZm9udC13ZWlnaHQ6IGJvbGRlcjtmb250LXNpemU6IDEzcHg7Y29sb3I6IGdyYXk7cGFkZGluZy10b3A6IDNweDtwYWRkaW5nLWxlZnQ6IDNweCI+5Y+m6ZyA6YWN6YCB6LS5IDxzcGFuIHN0eWxlPSJmb250LXNpemU6IDEwcHg7Y29sb3I6IGdyYXk7cGFkZGluZy1sZWZ0OiA1cHgiPu+/pTwvc3Bhbj4yPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2IzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWJ1dHRvbiB0eXBlPSJwcmltYXJ5IiBAY2xpY2s9Im9yZGVyRm9vZHMiIHJvdW5kPue7k+eul+iuouWNlTwvZWwtYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZWwtZHJhd2VyPgogICAgICAgIDxlbC1kcmF3ZXIKICAgICAgICAgICAgICAgIHRpdGxlPSLnvo7po5/or6bmg4UiCiAgICAgICAgICAgICAgICBzaXplPSc0MCUnCiAgICAgICAgICAgICAgICA6dmlzaWJsZS5zeW5jPSJmb29kRHJhd2VyIgogICAgICAgICAgICAgICAgOndpdGgtaGVhZGVyPSJmYWxzZSIKICAgICAgICAgICAgICAgIDpkaXJlY3Rpb249ImZvb2REaXJlY3Rpb24iPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb29kRGV0YWlsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZkUGljdHVyZSI+CiAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaW1ncyIgOnNyYz0iZm9vZERldGFpbC5mb29kLmZvb2RQaWN0dXJlIi8+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZkSW5mbyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmRpTmFtZSI+e3tmb29kRGV0YWlsLmZvb2QuZm9vZE5hbWV9fTwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZkaVRhZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhZy1ncm91cCIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGVsLXRhZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LWZvcj0iaXRlbSBpbiBmb29kRGV0YWlsLmZvb2RUYWdzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6a2V5PSJpdGVtLnRhZ0lkIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZmZlY3Q9InBsYWluIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBpdGVtLnRhZ05hbWUgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZWwtdGFnPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmRpRGV0YWlsIj57e2Zvb2REZXRhaWwuZm9vZC5mb29kSW50cm9kdWN0aW9ufX08L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZGlQcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZkaVAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPSJmb29kRGV0YWlsLmRpc2NvdW50PT0xIj48c3BhbiBzdHlsZT0iY29sb3I6ICNlYTRiMzU7Zm9udC1zaXplOiAxNnB4Ij7vv6U8L3NwYW4+IHt7Zm9vZERldGFpbC5mb29kLmZvb2RQcmljZX19PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtZWxzZT48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxNnB4Ij7vv6U8L3NwYW4+IHt7KGZvb2REZXRhaWwuZm9vZERpc2NvdW50UHJpY2UpLnRvRml4ZWQoMil9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJmb250LXNpemU6IDEwcHg7Y29sb3I6IGdyYXkiPiDvv6U8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiBncmF5O2ZvbnQtc2l6ZTogMTJweDt0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtwYWRkaW5nLXJpZ2h0OiA1cHgiPiB7eyhmb29kSXRlbS5mb29kLmZvb2RQcmljZSkudG9GaXhlZCgyKX19IDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZWwtdGFnIDprZXk9ImZvb2REZXRhaWwuZGlzY291bnQiIHNpemU9Im1pbmkiIHR5cGU9ImRhbmdlciIgZWZmZWN0PSJwbGFpbiIgPiB7e2Zvb2REZXRhaWwuZGlzY291bnQqMTB9feaKmDwvZWwtdGFnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZGlOdW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPSJmb29kRGV0YWlsLmZvb2ROdW09PTAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbC1idXR0b24gQGNsaWNrPSJhZGRGb29kTnVtKGZvb2REZXRhaWwuZm9vZE51bSwgZm9vZERldGFpbCwgZm9vZENob29zZUxpc3QpIiBzaXplPSJtaW5pIiB0eXBlPSJwcmltYXJ5IiBpY29uPSJlbC1pY29uLXBsdXMiIGNpcmNsZT48L2VsLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWVsc2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWJ1dHRvbiBAY2xpY2s9Im1pbnVzRm9vZE51bShmb29kRGV0YWlsLmZvb2ROdW0sIGZvb2REZXRhaWwsIGZvb2RDaG9vc2VMaXN0KSIgc2l6ZT0ibWluaSIgaWNvbj0iZWwtaWNvbi1taW51cyIgY2lyY2xlPjwvZWwtYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCA6bWluPSIxIiA6bWF4PSI5OSIgdi1tb2RlbC5udW1iZXI9ImZvb2REZXRhaWwuZm9vZE51bSIgQGNoYW5nZT0iY2hhbmdlRm9vZE51bShmb29kRGV0YWlsLmZvb2ROdW0sZm9vZERldGFpbCwgZm9vZENob29zZUxpc3QpIiBzdHlsZT0id2lkdGg6MzBweDt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6IDE2cHg7Y29sb3I6ICMzMTMzMzQ7Zm9udC13ZWlnaHQ6IGJvbGRlcjtwYWRkaW5nLWxlZnQ6IDEwcHg7cGFkZGluZy1yaWdodDogMTBweCIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbC1idXR0b24gQGNsaWNrPSJhZGRGb29kTnVtKGZvb2REZXRhaWwuZm9vZE51bSwgZm9vZERldGFpbCwgZm9vZENob29zZUxpc3QpIiBzaXplPSJtaW5pIiB0eXBlPSJwcmltYXJ5IiBpY29uPSJlbC1pY29uLXBsdXMiIGNpcmNsZT48L2VsLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9lbC1kcmF3ZXI+CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vZExpbmUiIHYtZm9yPSJmb29kSXRlbUxpbmUgaW4gZm9vZEl0ZW1MaXN0Ij4KPCEtLSAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+LS0+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvb2RJdGVtIiB2LWZvcj0iZm9vZEl0ZW0gaW4gZm9vZEl0ZW1MaW5lIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvb2RQaWMiPgogICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImltZ3MiIDpzcmM9ImZvb2RJdGVtLmZvb2QuZm9vZFBpY3R1cmUiIEBjbGljaz0iZm9vZERldGFpbFNob3coZm9vZEl0ZW0pIi8+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvb2RJbmZvIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb29kTmFtZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7Zm9vZEl0ZW0uZm9vZC5mb29kTmFtZX19CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9vZFByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPSJmb29kSXRlbS5kaXNjb3VudD09MSI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJweCI+77+lPC9zcGFuPiB7e2Zvb2RJdGVtLmZvb2QuZm9vZFByaWNlfX08L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWVsc2U+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJweCI+77+lPC9zcGFuPiB7eyhmb29kSXRlbS5mb29kRGlzY291bnRQcmljZSkudG9GaXhlZCgyKX19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMHB4O2NvbG9yOiBncmF5Ij4g77+lPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiBncmF5O2ZvbnQtc2l6ZTogMTJweDt0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtwYWRkaW5nLXJpZ2h0OiA1cHgiPiB7eyhmb29kSXRlbS5mb29kLmZvb2RQcmljZSkudG9GaXhlZCgyKX19IDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbC10YWcgOmtleT0iZm9vZEl0ZW0uZGlzY291bnQiIHNpemU9Im1pbmkiIHR5cGU9ImRhbmdlciIgZWZmZWN0PSJwbGFpbiIgPiB7e2Zvb2RJdGVtLmRpc2NvdW50KjEwfX3mipg8L2VsLXRhZz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9vZE51bSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1pZj0iZm9vZEl0ZW0uZm9vZE51bT09MCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZWwtYnV0dG9uIEBjbGljaz0iYWRkRm9vZE51bShmb29kSXRlbS5mb29kTnVtLCBmb29kSXRlbSwgZm9vZENob29zZUxpc3QpIiBzaXplPSJtaW5pIiB0eXBlPSJwcmltYXJ5IiBpY29uPSJlbC1pY29uLXBsdXMiIGNpcmNsZT48L2VsLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1lbHNlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWJ1dHRvbiBAY2xpY2s9Im1pbnVzRm9vZE51bShmb29kSXRlbS5mb29kTnVtLCBmb29kSXRlbSwgZm9vZENob29zZUxpc3QpIiBzaXplPSJtaW5pIiBpY29uPSJlbC1pY29uLW1pbnVzIiBjaXJjbGU+PC9lbC1idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgOm1pbj0iMSIgOm1heD0iOTkiIHYtbW9kZWwubnVtYmVyPSJmb29kSXRlbS5mb29kTnVtIiBAY2hhbmdlPSJjaGFuZ2VGb29kTnVtKGZvb2RJdGVtLmZvb2ROdW0sZm9vZEl0ZW0sIGZvb2RDaG9vc2VMaXN0KSIgc3R5bGU9IndpZHRoOjMwcHg7dGV4dC1hbGlnbjpjZW50ZXI7Zm9udC1zaXplOiAxNnB4O2NvbG9yOiAjMzEzMzM0O2ZvbnQtd2VpZ2h0OiBib2xkZXI7cGFkZGluZy1sZWZ0OiAxMHB4O3BhZGRpbmctcmlnaHQ6IDEwcHgiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbC1idXR0b24gQGNsaWNrPSJhZGRGb29kTnVtKGZvb2RJdGVtLmZvb2ROdW0sIGZvb2RJdGVtLCBmb29kQ2hvb3NlTGlzdCkiIHNpemU9Im1pbmkiIHR5cGU9InByaW1hcnkiIGljb249ImVsLWljb24tcGx1cyIgY2lyY2xlPjwvZWwtYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KPCEtLSAgICAgICAgICAgIDwvdGVtcGxhdGU+LS0+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iZGlhbG9nIj4KICAgICAgICAgICAgPGVsLWRpYWxvZyB0aXRsZT0i56Gu6K6k6K6i5Y2VIiBzdHlsZT0ib3ZlcmZsb3c6IGF1dG87d2lkdGg6IDIwMDBweCIgOnZpc2libGUuc3luYz0iZGlhbG9nT3JkZXJDb25maXJtVmlzaWJsZSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvcmRlckNvbmZpcm0iPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9jTGVmdCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxlbC1jYXJkIGNsYXNzPSJib3gtY2FyZCIgc3R5bGU9IndpZHRoOiAxMDAlOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJ0U2hvdyIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcnRJdGVtIiAgdi1mb3I9ImZvb2RJdGVtIGluIGZvb2RDaG9vc2VMaXN0LmZvb2RMaXN0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbVBpYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpbWdzIiA6c3JjPSJmb29kSXRlbS5mb29kLmZvb2RQaWN0dXJlIiBAY2xpY2s9ImZvb2REZXRhaWwoZm9vZEl0ZW0uZm9vZC5mb29kSWQpIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtSW5mbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtTmFtZSI+e3tmb29kSXRlbS5mb29kLmZvb2ROYW1lfX08L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW1QcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPSJmb29kSXRlbS5kaXNjb3VudD09MSI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTJweCI+77+lPC9zcGFuPiB7eyhmb29kSXRlbS5mb29kLmZvb2RQcmljZSkudG9GaXhlZCgyKX19PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWVsc2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJmb250LXNpemU6IDEycHgiPu+/pTwvc3Bhbj4ge3soZm9vZEl0ZW0uZm9vZERpc2NvdW50UHJpY2UpLnRvRml4ZWQoMil9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMHB4O2NvbG9yOiBncmF5Ij4g77+lPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogZ3JheTtmb250LXNpemU6IDEycHg7dGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7cGFkZGluZy1yaWdodDogNXB4Ij4ge3soZm9vZEl0ZW0uZm9vZC5mb29kUHJpY2UpLnRvRml4ZWQoMil9fSA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbC10YWcgOmtleT0iZm9vZEl0ZW0uZGlzY291bnQiIHNpemU9Im1pbmkiIHR5cGU9ImRhbmdlciIgZWZmZWN0PSJwbGFpbiIgPiB7e2Zvb2RJdGVtLmRpc2NvdW50KjEwfX3mipg8L2VsLXRhZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbU51bSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9ImZvb2RJdGVtLmZvb2ROdW09PTAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbC1idXR0b24gQGNsaWNrPSJhZGRGb29kTnVtKGZvb2RJdGVtLmZvb2ROdW0sIGZvb2RJdGVtLCBmb29kQ2hvb3NlTGlzdCkiIHNpemU9Im1pbmkiIHR5cGU9InByaW1hcnkiIGljb249ImVsLWljb24tcGx1cyIgY2lyY2xlPjwvZWwtYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtZWxzZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZWwtYnV0dG9uIEBjbGljaz0ibWludXNGb29kTnVtKGZvb2RJdGVtLmZvb2ROdW0sIGZvb2RJdGVtLCBmb29kQ2hvb3NlTGlzdCkiIHNpemU9Im1pbmkiIGljb249ImVsLWljb24tbWludXMiIGNpcmNsZT48L2VsLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgOm1pbj0iMSIgOm1heD0iOTkiIHYtbW9kZWwubnVtYmVyPSJmb29kSXRlbS5mb29kTnVtIiBAY2hhbmdlPSJjaGFuZ2VGb29kTnVtKGZvb2RJdGVtLmZvb2ROdW0sZm9vZEl0ZW0sIGZvb2RDaG9vc2VMaXN0KSIgc3R5bGU9IndpZHRoOjMwcHg7dGV4dC1hbGlnbjpjZW50ZXI7Zm9udC1zaXplOiAxNnB4O2NvbG9yOiAjMzEzMzM0O2ZvbnQtd2VpZ2h0OiBib2xkZXI7cGFkZGluZy1sZWZ0OiAxMHB4O3BhZGRpbmctcmlnaHQ6IDEwcHgiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZWwtYnV0dG9uIEBjbGljaz0iYWRkRm9vZE51bShmb29kSXRlbS5mb29kTnVtLCBmb29kSXRlbSwgZm9vZENob29zZUxpc3QpIiBzaXplPSJtaW5pIiB0eXBlPSJwcmltYXJ5IiBpY29uPSJlbC1pY29uLXBsdXMiIGNpcmNsZT48L2VsLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbUxpbmUiPjwvZGl2Pi0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZWwtY2FyZD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvY1JpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWNhcmQgY2xhc3M9ImJveC1jYXJkIiBzdHlsZT0id2lkdGg6IDEwMCU7aGVpZ2h0OiAxMDAlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9jciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib2NyMSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbC1jYXJkIGNsYXNzPSJib3gtY2FyZCIgc3R5bGU9IndpZHRoOiAxMDAlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWRyb3Bkb3duIEBjb21tYW5kPSJjaG9vc2VBZGRyZXNzIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImVsLWRyb3Bkb3duLWxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e29yZGVyLmFkZHJlc3MuYWRkcmVzc0RldGFpbH19PGkgY2xhc3M9ImVsLWljb24tYXJyb3ctZG93biBlbC1pY29uLS1yaWdodCI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWRyb3Bkb3duLW1lbnUgc2xvdD0iZHJvcGRvd24iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWRyb3Bkb3duLWl0ZW0gdi1mb3I9ImFkZHJlc3MgaW4gSW5mb3JtYXRpb24uYWRkcmVzc0xpc3QiIDpjb21tYW5kPSJhZGRyZXNzLmFkZHJlc3NJZCIgOmtleT0iYWRkcmVzcy5hZGRyZXNzSWQiPnt7YWRkcmVzcy5hZGRyZXNzRGV0YWlsfX08L2VsLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZWwtZHJvcGRvd24tbWVudT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2VsLWRyb3Bkb3duPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbC1kcm9wZG93biBAY29tbWFuZD0iY2hvb3NlUGhvbmVudW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJlbC1kcm9wZG93bi1saW5rIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3tvcmRlci5jdXN0b21lci5jdXN0b21lck5hbWV9fSAoe3tvcmRlci5jdXN0b21lci5jdXN0b21lclNleH19KSB7e29yZGVyLnBob25lbnVtLnBob25lbnVtTWVzfX08aSBjbGFzcz0iZWwtaWNvbi1hcnJvdy1kb3duIGVsLWljb24tLXJpZ2h0Ij48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZWwtZHJvcGRvd24tbWVudSBzbG90PSJkcm9wZG93biI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZWwtZHJvcGRvd24taXRlbSB2LWZvcj0icGhvbmVudW0gaW4gSW5mb3JtYXRpb24ucGhvbmVudW1MaXN0IiA6Y29tbWFuZD0icGhvbmVudW0ucGhvbmVudW1JZCIgOmtleT0icGhvbmVudW0ucGhvbmVudW1JZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3twaG9uZW51bS5waG9uZW51bU1lc319PC9lbC1kcm9wZG93bi1pdGVtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2VsLWRyb3Bkb3duLW1lbnU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9lbC1kcm9wZG93bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2VsLWNhcmQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib2NyMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbC1jYXJkIGNsYXNzPSJib3gtY2FyZCIgc3R5bGU9IndpZHRoOiAxMDAlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IGZsZXg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJmbGV4OiAxOyI+56uL5Y2z6YCB5Ye6PC9kaXY+PGRpdiBzdHlsZT0iZmxleDo0O2NvbG9yOiAjNDA5RUZGO3RleHQtYWxpZ246IHJpZ2h0OyI+5aSn57qmIHt7SW5mb3JtYXRpb24ucHJlZGljdFRpbWV9fSDpgIHovr48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogZmxleDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImZsZXg6IDE7Ij7mlK/ku5jmlrnlvI88L2Rpdj48ZGl2IHN0eWxlPSJmbGV4OjQ7Y29sb3I6ICM0MDlFRkY7dGV4dC1hbGlnbjogcmlnaHQ7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZWwtZHJvcGRvd24gQGNvbW1hbmQ9ImNob29zZVBheVdheSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImVsLWRyb3Bkb3duLWxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e29yZGVyLnBheVdheS5wYXlXYXlOYW1lfX08aSBjbGFzcz0iZWwtaWNvbi1hcnJvdy1kb3duIGVsLWljb24tLXJpZ2h0Ij48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZWwtZHJvcGRvd24tbWVudSBzbG90PSJkcm9wZG93biI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZWwtZHJvcGRvd24taXRlbSB2LWZvcj0icGF5V2F5IGluIEluZm9ybWF0aW9uLnBheVdheUxpc3QiIDpjb21tYW5kPSJwYXlXYXkucGF5V2F5SWQiIDprZXk9InBheVdheS5wYXlXYXlJZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3twYXlXYXkucGF5V2F5TmFtZX19PC9lbC1kcm9wZG93bi1pdGVtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2VsLWRyb3Bkb3duLW1lbnU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9lbC1kcm9wZG93bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZWwtY2FyZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvY3IzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWNhcmQgY2xhc3M9ImJveC1jYXJkIiBzdHlsZT0id2lkdGg6IDEwMCUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogZmxleDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImZsZXg6IDE7Ij7ljIXoo4XotLk8L2Rpdj48ZGl2IHN0eWxlPSJmbGV4OjQ7dGV4dC1hbGlnbjogcmlnaHQ7Ij48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMHB4O3BhZGRpbmctbGVmdDogNXB4Ij7vv6U8L3NwYW4+IDE8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogZmxleDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImZsZXg6IDE7Ij7phY3pgIHotLk8L2Rpdj48ZGl2IHN0eWxlPSJmbGV4OjQ7dGV4dC1hbGlnbjogcmlnaHQ7Ij48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMHB4O3BhZGRpbmctbGVmdDogNXB4Ij7vv6U8L3NwYW4+IDI8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2VsLWNhcmQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib2NyNCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbC1jYXJkIGNsYXNzPSJib3gtY2FyZCIgc3R5bGU9IndpZHRoOiAxMDAlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IGZsZXg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJmbGV4OiAxOyI+5rS75Yqo5LyY5oOgPC9kaXY+PGRpdiBzdHlsZT0iZmxleDo0O3RleHQtYWxpZ246IHJpZ2h0O2NvbG9yOiAjZWE0YjM1O2ZvbnQtd2VpZ2h0OiBib2xkZXIiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDEwcHg7cGFkZGluZy1sZWZ0OiA1cHg7Y29sb3I6ICNlYTRiMzU7Zm9udC13ZWlnaHQ6IGJvbGRlciI+Le+/pTwvc3Bhbj4ge3soZm9vZENob29zZUxpc3QuZm9vZFByaWNlU3VtLWZvb2RDaG9vc2VMaXN0LmZvb2REaXNjb3VudFByaWNlU3VtKS50b0ZpeGVkKDIpfX08L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogZmxleDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImZsZXg6IDE7Ij7nuqLljIXkvJjmg6A8L2Rpdj48ZGl2IHN0eWxlPSJmbGV4OjQ7dGV4dC1hbGlnbjogcmlnaHQ7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZWwtZHJvcGRvd24gQGNvbW1hbmQ9ImNob29zZVJlZGFja2V0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZWwtZHJvcGRvd24tbGluayIgc3R5bGU9ImNvbG9yOiAjZWE0YjM1O2ZvbnQtd2VpZ2h0OiBib2xkZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMHB4O3BhZGRpbmctbGVmdDogNXB4O2NvbG9yOiAjZWE0YjM1O2ZvbnQtd2VpZ2h0OiBib2xkZXIiPi3vv6U8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7b3JkZXIuY3VzUmVkLnJlZHBhY2tldC5yZWRwYWNrZXROdW19fTxpIGNsYXNzPSJlbC1pY29uLWFycm93LWRvd24gZWwtaWNvbi0tcmlnaHQiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbC1kcm9wZG93bi1tZW51IHNsb3Q9ImRyb3Bkb3duIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbC1kcm9wZG93bi1pdGVtIHYtaWY9IkluZm9ybWF0aW9uLnJlZHBhY2tldExpc3QhPVtdIiB2LWZvcj0iY3VzUmVkIGluIEluZm9ybWF0aW9uLnJlZHBhY2tldExpc3QiIDpjb21tYW5kPSJjdXNSZWQuY3VzdG9tZXJSZWRwYWNrZXQuY3VzdG9tZXJSZWRwYWNrZXRJZCIgOmtleT0iY3VzUmVkLmN1c3RvbWVyUmVkcGFja2V0LmN1c3RvbWVyUmVkcGFja2V0SWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IGZsZXg7d2lkdGg6IDI1MHB4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iZmxleDogMTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0icGFkZGluZy10b3A6IDEwcHgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly90aW1nc2EuYmFpZHUuY29tL3RpbWc/aW1hZ2UmcXVhbGl0eT04MCZzaXplPWI5OTk5XzEwMDAwJnNlYz0xNTkzNjg0NzM5NzA1JmRpPTNhZjhmYjRiZTU1NzAwN2M5MGNhZTYzNGZmMjE5NTBlJmltZ3R5cGU9MCZzcmM9aHR0cCUzQSUyRiUyRmltYWdlLmJpYW9iYWlqdS5jb20lMkZ1cGxvYWRzJTJGMjAxOTA2MTAlMkYxNyUyRjE1NjAxNTkxMDItRVlOc3VIQk93ZC5qcGciCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbWFnZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjQwcHgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodD0iNTBweCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJmbGV4OiAyO2ZvbnQtd2VpZ2h0OiBib2xkZXI7Zm9udC1zaXplOiAxNHB4O3BhZGRpbmctdG9wOiAyMHB4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7Y3VzUmVkLnJlZHBhY2tldC5yZWRwYWNrZXROYW1lfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImZsZXg6IDI7ZGlzcGxheTogZmxleDtmbGV4LWRpcmVjdGlvbjogY29sdW1uO3BhZGRpbmctdG9wOiAxMHB4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImhlaWdodDoyMHB4O2NvbG9yOiAjZWE0YjM1O2ZvbnQtd2VpZ2h0OiBib2xkZXI7Zm9udC1zaXplOiAxNHB4O3RleHQtYWxpZ246IGNlbnRlcjsiPnt7Y3VzUmVkLnJlZHBhY2tldC5yZWRwYWNrZXROdW19fTwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iaGVpZ2h0OjIwcHg7Zm9udC1zaXplOiA4cHg7dGV4dC1hbGlnbjogY2VudGVyO3RvcDogMHB4Ij7mu6Ege3tjdXNSZWQucmVkcGFja2V0LnRocmVzaG9sZH19IOWFg+WPr+eUqDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZWwtZHJvcGRvd24taXRlbT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbC1kcm9wZG93bi1pdGVtIHYtZWxzZSA6a2V5PSIwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiBmbGV4O3dpZHRoOiAyNTBweDt0ZXh0LWFsaWduOiBjZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJjb2xvcjogZ3JheSI+IOayoeacieWPr+eUqOe6ouWMhSA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZWwtZHJvcGRvd24taXRlbT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9lbC1kcm9wZG93bi1tZW51PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZWwtZHJvcGRvd24+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9lbC1jYXJkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9jcjUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZWwtY2FyZCBjbGFzcz0iYm94LWNhcmQiIHN0eWxlPSJ3aWR0aDogMTAwJSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJ0QnV0dG9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYjEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL3RpbWdzYS5iYWlkdS5jb20vdGltZz9pbWFnZSZxdWFsaXR5PTgwJnNpemU9Yjk5OTlfMTAwMDAmc2VjPTE1OTM4NjcyMTY4MTkmZGk9Njg4MGY3MDY5ZWFlOTQ1NGNjMTdlZTNmYzhkYmNkOWYmaW1ndHlwZT0wJnNyYz1odHRwJTNBJTJGJTJGYnBpYy41ODhrdS5jb20lMkZlbGVtZW50X29yaWdpbl9taW5fcGljJTJGMTYlMkYwNyUyRjI1JTJGMTI1Nzk1OTkxNDk1MjAxLmpwZyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iaGVpZ2h0OiA5MCU7d2lkdGg6IDcwJTtwYWRkaW5nLXRvcDogNSU7cGFkZGluZy1sZWZ0OiAxNiU7Ym9yZGVyLXJhZGl1czogMTgwcHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FydG51bSI+e3tmb29kQ2hvb3NlTGlzdC5mb29kTnVtU3VtfX08L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYjIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJmb250LXdlaWdodDogYm9sZGVyO2ZvbnQtc2l6ZTogMjJweDtkaXNwbGF5OiBpbmxpbmU7Y29sb3I6ICNlYTRiMzU7Ij48c3BhbiBzdHlsZT0iY29sb3I6ICNlYTRiMzU7Zm9udC1zaXplOiAxNnB4Ij7vv6U8L3NwYW4+e3soZm9vZENob29zZUxpc3QuZm9vZERpc2NvdW50UHJpY2VTdW0pLnRvRml4ZWQoMil9fTwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJmb250LXdlaWdodDogYm9sZGVyO2ZvbnQtc2l6ZTogMTRweDtkaXNwbGF5OiBpbmxpbmU7Y29sb3I6IGdyYXk7dGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2giPjxzcGFuIHN0eWxlPSJmb250LXNpemU6IDEwcHg7Y29sb3I6IGdyYXk7cGFkZGluZy1sZWZ0OiA1cHgiPu+/pTwvc3Bhbj57eyhmb29kQ2hvb3NlTGlzdC5mb29kUHJpY2VTdW0pLnRvRml4ZWQoMil9fTwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJmb250LXdlaWdodDogYm9sZGVyO2ZvbnQtc2l6ZTogMTNweDtjb2xvcjogZ3JheTtwYWRkaW5nLXRvcDogM3B4O3BhZGRpbmctbGVmdDogM3B4Ij7lj6bpnIDphY3pgIHotLkgPHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTBweDtjb2xvcjogZ3JheTtwYWRkaW5nLWxlZnQ6IDVweCI+77+lPC9zcGFuPjI8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2VsLWNhcmQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9lbC1jYXJkPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CgoKICAgICAgICAgICAgPGRpdiBzbG90PSJmb290ZXIiIGNsYXNzPSJkaWFsb2ctZm9vdGVyIj4KICAgICAgICAgICAgICAgIDxlbC1idXR0b24gQGNsaWNrPSJkaWFsb2dPcmRlckNvbmZpcm1WaXNpYmxlID0gZmFsc2UiPuWPliDmtog8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgICAgIDxlbC1idXR0b24gdHlwZT0icHJpbWFyeSIgQGNsaWNrPSJwYXlGb29kcyI+5o+QIOS6pDwvZWwtYnV0dG9uPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2VsLWRpYWxvZz4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo="},null]}