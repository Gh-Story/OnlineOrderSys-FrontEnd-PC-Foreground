{"remainingRequest":"D:\\HBuilderProject\\pc_fd_f\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HBuilderProject\\pc_fd_f\\src\\views\\Home\\Order\\Order.vue?vue&type=template&id=31a7ed97&scoped=true&","dependencies":[{"path":"D:\\HBuilderProject\\pc_fd_f\\src\\views\\Home\\Order\\Order.vue","mtime":1594311969654},{"path":"D:\\HBuilderProject\\pc_fd_f\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\HBuilderProject\\pc_fd_f\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\HBuilderProject\\pc_fd_f\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\HBuilderProject\\pc_fd_f\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}