{"remainingRequest":"F:\\东北大学\\学校文件\\实训\\前端\\20200718\\pc_fd_f\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东北大学\\学校文件\\实训\\前端\\20200718\\pc_fd_f\\src\\views\\Home\\Food\\Food.vue?vue&type=template&id=d5e4110e&scoped=true&","dependencies":[{"path":"F:\\东北大学\\学校文件\\实训\\前端\\20200718\\pc_fd_f\\src\\views\\Home\\Food\\Food.vue","mtime":1595516464723},{"path":"F:\\东北大学\\学校文件\\实训\\前端\\20200718\\pc_fd_f\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500371},{"path":"F:\\东北大学\\学校文件\\实训\\前端\\20200718\\pc_fd_f\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500371},{"path":"F:\\东北大学\\学校文件\\实训\\前端\\20200718\\pc_fd_f\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500371},{"path":"F:\\东北大学\\学校文件\\实训\\前端\\20200718\\pc_fd_f\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500371}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}